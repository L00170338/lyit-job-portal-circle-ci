# Tagged releases of Python docker images can be found at:
# https://hub.docker.com/r/library/python/tags/
#image: python:3.8-buster
image: python:3.8

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate


stages:
  - build
  - lint
  - test
  - deploy

build:
  stage: build
  script:
    - source venv/bin/activate
    - pip install -r requirements.txt
    - python manage.py migrate



flake8:
  stage: lint
  script:
    - source venv/bin/activate
    - flake8 --max-line-length=150 --ignore=E266,E501,E712,F811 *.py

pytest:
  stage: test
  script:
    - source venv/bin/activate
    - python manage.py test --settings=jobs.settings -v3



newman_tests:
    stage: test
    image:
        name: postman/newman_alpine33
        entrypoint: [""]
    script:
        - newman --version
        - newman run ./tests/LYIT-JOB-PORTAL.postman_collection.json -e ./tests/LYIT-JOB-PORTAL.postman_collection.json

deploy:
  stage: deploy
  script:
  - apt update -y
  - apt install -y ruby-dev git 
  - gem install dpl
  - dpl --provider=heroku --app=lyit-job-portal --api-key=$heroku_api_key --skip-cleanup



